{"ast":null,"code":"import _classCallCheck from \"/home/home/node-js-getting-started/nodeJSONdb/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/home/node-js-getting-started/nodeJSONdb/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/home/node-js-getting-started/nodeJSONdb/web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/home/node-js-getting-started/nodeJSONdb/web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/home/node-js-getting-started/nodeJSONdb/web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/home/node-js-getting-started/nodeJSONdb/web/src/coreTable.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar coreTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(coreTable, _Component);\n\n  function coreTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, coreTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(coreTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editMode: false,\n      file: null\n    };\n\n    _this.toggleState = function () {\n      return _this.setState({\n        editMode: !_this.state.editMode\n      });\n    };\n\n    _this.edit = function (id, name, surname, company) {\n      _this.props.editHandler(id, name, surname, company);\n\n      _this.setState({\n        editMode: false\n      });\n    };\n\n    _this.resetFile = function () {\n      return _this.setState({\n        file: null\n      });\n    };\n\n    _this.onFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.fileUpload(_this.state.file).then(function (response) {\n        _this.props.loadHandler();\n\n        _this.resetFile();\n      });\n    };\n\n    _this.onChangeFile = function (event) {\n      _this.setState({\n        file: event.target.files[0]\n      });\n    };\n\n    _this.fileUpload = function (file) {\n      var url = 'http://localhost:3000/upload-image';\n      var formData = new FormData();\n      formData.append(\"image-\".concat(_this.props.row.id), file);\n      var config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      return axios.post(url, formData, config);\n    };\n\n    _this.onChangeImageClick = function (event) {\n      event.preventDefault();\n\n      _this.inputFile.click();\n    };\n\n    return _this;\n  }\n\n  _createClass(coreTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          row = _this$props.row,\n          deleteHandler = _this$props.deleteHandler;\n\n      if (this.state.editMode) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          defaultValue: row.name,\n          placeholder: \"test\",\n          ref: function ref(input) {\n            return _this2.name = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          defaultValue: row.surname,\n          placeholder: \"test\",\n          ref: function ref(input) {\n            return _this2.surname = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          defaultValue: row.company,\n          placeholder: \"test\",\n          ref: function ref(input) {\n            return _this2.company = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, row.image ? React.createElement(\"img\", {\n          src: \"http://localhost:3000/images/\".concat(row.image),\n          alt: \"avatar\",\n          height: \"80\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }) : ''), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.toggleState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Cancel\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.edit(row.id, _this2.name.value, _this2.surname.value, _this2.company.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Save\")));\n      }\n\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, row.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, row.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, row.surname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, row.company), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, row.image ? React.createElement(\"img\", {\n        src: \"http://localhost:3000/images/\".concat(row.image),\n        alt: \"avatar\",\n        height: \"80\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }) : ''), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.toggleState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Edit\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return deleteHandler(row.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Delete\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.onChangeFile,\n        ref: function ref(input) {\n          return _this2.inputFile = input;\n        },\n        style: {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), !this.state.file && React.createElement(\"button\", {\n        name: \"add\",\n        onClick: this.onChangeImageClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Change Image\"), this.state.file && React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Upload\"), this.state.file && React.createElement(\"button\", {\n        onClick: this.resetFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return coreTable;\n}(Component);\n\nexport default coreTable;","map":{"version":3,"sources":["/home/home/node-js-getting-started/nodeJSONdb/web/src/coreTable.js"],"names":["React","Component","axios","coreTable","state","editMode","file","toggleState","setState","edit","id","name","surname","company","props","editHandler","resetFile","onFormSubmit","event","preventDefault","fileUpload","then","response","loadHandler","onChangeFile","target","files","url","formData","FormData","append","row","config","headers","post","onChangeImageClick","inputFile","click","deleteHandler","input","image","value","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass coreTable extends Component {\n  state = { editMode: false, file: null };\n\n  toggleState = () => this.setState({ editMode: !this.state.editMode });\n\n  edit = (id, name, surname, company) => {\n    this.props.editHandler(id, name, surname, company);\n    this.setState({ editMode: false });\n  };\n\n  resetFile = () =>\n    this.setState({ file: null });\n\n  onFormSubmit = (event) => {\n    event.preventDefault()\n    this.fileUpload(this.state.file)\n      .then((response) => {\n        this.props.loadHandler();\n        this.resetFile();\n      })\n  }\n\n  onChangeFile = (event) => {\n    this.setState({ file: event.target.files[0] })\n  }\n\n  fileUpload = (file) => {\n    const url = 'http://localhost:3000/upload-image';\n    const formData = new FormData();\n    formData.append(`image-${this.props.row.id}`, file)\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }\n    return axios.post(url, formData, config)\n  }\n\n  onChangeImageClick = (event) => {\n    event.preventDefault();\n    this.inputFile.click();\n  };\n\n  render() {\n    const { row, deleteHandler } = this.props;\n\n    if (this.state.editMode) {\n      return (\n        <tr>\n          <td />\n          <td>\n            <input\n              type=\"text\"\n              defaultValue={row.name}\n              placeholder=\"test\"\n              ref={input => (this.name = input)}\n            />\n          </td>\n          <td>\n            <input\n              type=\"text\"\n              defaultValue={row.surname}\n              placeholder=\"test\"\n              ref={input => (this.surname = input)}\n            />\n          </td>\n          <td>\n            <input\n              type=\"text\"\n              defaultValue={row.company}\n              placeholder=\"test\"\n              ref={input => (this.company = input)}\n            />\n          </td>\n          <td>\n            {row.image ? (\n              <img\n\t\t\t\t\t\t\t\tsrc={`http://localhost:3000/images/${row.image}`}\n                alt=\"avatar\"\n                height=\"80\"\n              />\n            ) : (\n                ''\n              )}\n          </td>\n          <td>\n            <button onClick={this.toggleState}>Cancel</button>\n          </td>\n          <td>\n            <button\n              onClick={() =>\n                this.edit(\n                  row.id,\n                  this.name.value,\n                  this.surname.value,\n                  this.company.value,\n                )\n              }\n            >\n              Save\n            </button>\n          </td>\n        </tr>\n      );\n    }\n    return (\n      <tr>\n        <td>{row.id}</td>\n        <td>{row.name}</td>\n        <td>{row.surname}</td>\n        <td>{row.company}</td>\n        <td>\n          {row.image ? (\n            <img\n\t\t\t\t\t\t\tsrc={`http://localhost:3000/images/${row.image}`}\n              alt=\"avatar\"\n              height=\"80\"\n            />\n          ) : (\n              ''\n            )}\n        </td>\n        <td>\n          <button onClick={this.toggleState}>Edit</button>\n        </td>\n        <td>\n          <button onClick={() => deleteHandler(row.id)}>Delete</button>\n        </td>\n        <td>\n          <form onSubmit={this.onFormSubmit} >\n            <input type=\"file\"\n              onChange={this.onChangeFile}\n              ref={input => this.inputFile = input}\n              style={{ display: 'none' }} />\n            {!this.state.file && <button name=\"add\"\n              onClick={this.onChangeImageClick}\n            >Change Image</button>}\n            {this.state.file && <button type=\"submit\">Upload</button>}\n            {this.state.file && <button onClick={this.resetFile}>Cancel</button>}\n          </form>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default coreTable;\n"]},"metadata":{},"sourceType":"module"}